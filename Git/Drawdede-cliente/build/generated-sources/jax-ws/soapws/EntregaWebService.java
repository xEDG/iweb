
package soapws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EntregaWebService", targetNamespace = "http://soapws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EntregaWebService {


    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "remove", targetNamespace = "http://soapws/", className = "soapws.Remove")
    @Action(input = "http://soapws/EntregaWebService/remove")
    public void remove(
        @WebParam(name = "entity", targetNamespace = "")
        Serie entity);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://soapws/", className = "soapws.Count")
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://soapws/", className = "soapws.CountResponse")
    @Action(input = "http://soapws/EntregaWebService/countRequest", output = "http://soapws/EntregaWebService/countResponse")
    public int count();

    /**
     * 
     * @param id
     * @return
     *     returns soapws.Serie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://soapws/", className = "soapws.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://soapws/", className = "soapws.FindResponse")
    @Action(input = "http://soapws/EntregaWebService/findRequest", output = "http://soapws/EntregaWebService/findResponse")
    public Serie find(
        @WebParam(name = "id", targetNamespace = "")
        Object id);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "create", targetNamespace = "http://soapws/", className = "soapws.Create")
    @Action(input = "http://soapws/EntregaWebService/create")
    public void create(
        @WebParam(name = "entity", targetNamespace = "")
        Serie entity);

    /**
     * 
     * @return
     *     returns java.util.List<soapws.Serie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://soapws/", className = "soapws.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://soapws/", className = "soapws.FindAllResponse")
    @Action(input = "http://soapws/EntregaWebService/findAllRequest", output = "http://soapws/EntregaWebService/findAllResponse")
    public List<Serie> findAll();

    /**
     * 
     * @return
     *     returns java.util.List<soapws.Entrega>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFechaEntregaNotNull", targetNamespace = "http://soapws/", className = "soapws.GetFechaEntregaNotNull")
    @ResponseWrapper(localName = "getFechaEntregaNotNullResponse", targetNamespace = "http://soapws/", className = "soapws.GetFechaEntregaNotNullResponse")
    @Action(input = "http://soapws/EntregaWebService/getFechaEntregaNotNullRequest", output = "http://soapws/EntregaWebService/getFechaEntregaNotNullResponse")
    public List<Entrega> getFechaEntregaNotNull();

    /**
     * 
     * @param d1
     * @param d2
     * @return
     *     returns java.util.List<soapws.Entrega>
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "filtrarPorPeriodoTiempo", targetNamespace = "http://soapws/", className = "soapws.FiltrarPorPeriodoTiempo")
    @ResponseWrapper(localName = "filtrarPorPeriodoTiempoResponse", targetNamespace = "http://soapws/", className = "soapws.FiltrarPorPeriodoTiempoResponse")
    @Action(input = "http://soapws/EntregaWebService/filtrarPorPeriodoTiempoRequest", output = "http://soapws/EntregaWebService/filtrarPorPeriodoTiempoResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://soapws/EntregaWebService/filtrarPorPeriodoTiempo/Fault/ParseException")
    })
    public List<Entrega> filtrarPorPeriodoTiempo(
        @WebParam(name = "d1", targetNamespace = "")
        String d1,
        @WebParam(name = "d2", targetNamespace = "")
        String d2)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param range
     * @return
     *     returns java.util.List<soapws.Serie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://soapws/", className = "soapws.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://soapws/", className = "soapws.FindRangeResponse")
    @Action(input = "http://soapws/EntregaWebService/findRangeRequest", output = "http://soapws/EntregaWebService/findRangeResponse")
    public List<Serie> findRange(
        @WebParam(name = "range", targetNamespace = "")
        List<Integer> range);

    /**
     * 
     * @param entity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "edit", targetNamespace = "http://soapws/", className = "soapws.Edit")
    @Action(input = "http://soapws/EntregaWebService/edit")
    public void edit(
        @WebParam(name = "entity", targetNamespace = "")
        Serie entity);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHulks", targetNamespace = "http://soapws/", className = "soapws.GetHulks")
    @ResponseWrapper(localName = "getHulksResponse", targetNamespace = "http://soapws/", className = "soapws.GetHulksResponse")
    @Action(input = "http://soapws/EntregaWebService/getHulksRequest", output = "http://soapws/EntregaWebService/getHulksResponse")
    public List<String> getHulks();

    /**
     * 
     * @param anotacion
     * @return
     *     returns java.util.List<soapws.Entrega>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "filtroPorAnotacion", targetNamespace = "http://soapws/", className = "soapws.FiltroPorAnotacion")
    @ResponseWrapper(localName = "filtroPorAnotacionResponse", targetNamespace = "http://soapws/", className = "soapws.FiltroPorAnotacionResponse")
    @Action(input = "http://soapws/EntregaWebService/filtroPorAnotacionRequest", output = "http://soapws/EntregaWebService/filtroPorAnotacionResponse")
    public List<Entrega> filtroPorAnotacion(
        @WebParam(name = "anotacion", targetNamespace = "")
        String anotacion);

}
